MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "";
    SP:     start = $0100,  size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;

    # TODO think of a system to define the banks in code?
    # Define new memory banks here
    # PRGLow: start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff, bank = 0;
    # PRG_A0: start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff, bank = 1;
    # PRG_C0: start = $c000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff, bank = 2;
    # PRGLast:start = $e000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $ff, bank = 3;

    PRG:    start = $8000,  size = $8000, type = ro, fill = yes, file = %O, fillval = $ff;

    VECTORS:start = $fffa,  size = $6,    file = %O, fill = yes;
}

SEGMENTS {
    INESHDR:    load = HDR,     type = ro;
    ZEROPAGE:   load = ZP,      type = zp;
    # OAM:        load = OAM,     type = bss, align = $100;
    BSS:        load = RAM,     type = bss;

    # User created code defaults to the first A0 bank
    CODE:       load = PRG,  type = ro;
    DATA:       load = PRG,  type = ro;
    
    VECTORS:    load = PRG, type = ro,  start = $fffa;
}
